version: '3.7'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      PGDATA: /data/postgres
    restart: unless-stopped
    expose:
      - "${DB_PORT}"
    ports:
      - "${DB_PORT}:${DB_PORT}"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  notes-migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    entrypoint: [
      "migrate", "-path", "/migrations", "-database",
      "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}?sslmode=disable", "up"
    ]
    restart: on-failure
    depends_on:
      - postgres

  notes:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ENV=docker
      - SERVER_HOST=${SERVER_HOST}
      - SERVER_PORT=${SERVER_PORT}
      - LOG_LEVEL=${LOG_LEVEL}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - YANDEX_SPELLER_URL=${YANDEX_SPELLER_URL}
      - YANDEX_SPELLER_LANGUAGE=${YANDEX_SPELLER_LANGUAGE}
      - YANDEX_SPELLER_OPTIONS=${YANDEX_SPELLER_OPTIONS}
    volumes:
      - ./docs/openapi.yml:/app/docs/openapi.yml
    ports:
      - 3000:3000
    depends_on:
      - postgres
    restart: unless-stopped
